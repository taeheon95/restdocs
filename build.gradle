plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.hibernate.orm' version '6.2.6.Final'
    id 'org.graalvm.buildtools.native' version '0.9.23'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.taeheon'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

tasks.named('asciidoctor') {
    dependsOn test
    configurations "asciidoctorExtensions"
    inputs.dir snippetsDir

    sources {
        include("**/*.adoc")


    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file('build/docs/asciidoc')
    into file("src/main/resources/static/docs")
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}